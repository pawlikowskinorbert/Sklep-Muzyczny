@model Project.Models.Product

@if (ViewData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @ViewData["SuccessMessage"]
    </div>
}



<div class="container " style="margin-top: 80px;">
    <div class="row">
        <!-- Sekcja zdjęcia produktu -->
        <div class="col-md-6">
            <img src="@Url.Content("/" + Model.PhotoUrl)" class="img-fluid rounded shadow mt-1" alt="@Model.Name"
                style="width: 100%; max-height: 430px; object-fit: contain;">

            <form class="mt-2">
                <input type="hidden" name="productId" value="@Model.Id" />
                <div class="input-group mb-3">

                    <button type="button" class="btn btn-primary btn-lg w-100" data-bs-toggle="modal"
                        data-bs-target="#addToCartModal" @(Model.QuantityInStoct > 0 ? "" : "disabled")>
                        Dodaj do koszyka
                    </button>
                </div>
                <a href="@Url.Action("Index", "Product")" class="btn btn-secondary btn-lg w-100">
                    Wróć do listy produktów
                </a>
            </form>
        </div>

        <!-- Sekcja informacji o produkcie -->
        <div class="col-md-6">
            <h1 class="display-5 mb-3">@Model.Name</h1>

            <!-- Cena produktu -->
            <h3 class="text-success mb-4">@Model.Price.ToString()$</h3>

            <!-- Opis produktu -->
            <p class="lead mb-4">@Model.Description</p>

            <!-- Szczegóły produktu -->
            <ul class="list-group mb-4">
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <strong>Marka:</strong>
                    <span>@Model.Brand?.Name</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <strong>Typ:</strong>
                    <span>@Model.ProductType?.Name</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <strong>Dostępna ilość:</strong>
                    <span>@(Model.QuantityInStoct > 0 ? $"{Model.QuantityInStoct}" : "Brak w magazynie")</span>
                </li>

                <!-- Dodajemy specyfikacje produktu -->
                <div class="accordion" id="productDetailsAccordion">
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingSpecifications">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapseSpecifications" aria-expanded="true"
                                aria-controls="collapseSpecifications">
                                Specyfikacje produktu
                            </button>
                        </h2>
                        <div id="collapseSpecifications" class="accordion-collapse collapse "
                            aria-labelledby="headingSpecifications" data-bs-parent="#productDetailsAccordion">
                            <div class="accordion-body">
                                <ul class="list-group">
                                    @foreach (var detail in Model.ProductDetails)
                                    {
                                        string formattedValue = detail.Value;
                                        if (bool.TryParse(detail.Value, out var boolValue))
                                        {
                                            formattedValue = boolValue ? "Tak" : "Nie";
                                        }

                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            <strong>@detail.SpecificationDefinition?.DisplayName:</strong>
                                            <span>@formattedValue</span>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Przycisk akcji -->


                <div class="modal fade" id="addToCartModal" tabindex="-1" aria-labelledby="addToCartModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addToCartModalLabel">Dodaj do koszyka</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <!-- Sekcja z informacjami o produkcie -->
                                <div class="d-flex align-items-center mb-4">
                                    <img src="@Url.Content("/" + Model.PhotoUrl)" alt="@Model.Name"
                                        class="img-thumbnail"
                                        style="width: 100px; height: 100px; object-fit: cover; margin-right: 15px;" />
                                    <div>
                                        <h5 class="mb-1">@Model.Name</h5>
                                        <p class="mb-0 text-muted">Cena: @Model.Price.ToString("C")</p>
                                    </div>
                                </div>

                                <!-- Sekcja formularza -->
                                <div id="cartFormSection">
                                    <form asp-action="Add" asp-controller="ShoppingCart" method="post"
                                        id="addToCartForm">
                                        <input type="hidden" name="productId" value="@Model.Id" />
                                        <div class="input-group mb-3">
                                            <label class="input-group-text" for="quantity">Ilość:</label>
                                            <input type="number" name="quantity" id="quantity" value="1" min="1"
                                                max="@Model.QuantityInStoct" class="form-control" />
                                        </div>
                                        <button type="submit" class="btn btn-primary w-100">Dodaj do koszyka</button>
                                    </form>
                                </div>

                                <!-- Sekcja potwierdzenia -->
                                <div id="cartConfirmationSection" style="display: none;">
                                    <h5 class="mb-3 text-success">Produkt został dodany do koszyka!</h5>
                                    <div class="d-flex justify-content-between">
                                        <a href="@Url.Action("Index", "ShoppingCart")"
                                            class="btn btn-success w-45">Przejdź
                                            do koszyka</a>
                                        <button type="button" class="btn btn-secondary w-45"
                                            data-bs-dismiss="modal">Wróć do
                                            przeglądania</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>



        </div>
    </div>
</div>



<script>
    document.querySelector("#addToCartForm").addEventListener("submit", function (e) {
        // Zatrzymanie domyślnego przesyłania formularza
        e.preventDefault();

        const form = e.target;
        const formData = new FormData(form);

        // Wysłanie danych na serwer
        fetch(form.action, {
            method: form.method,
            body: formData
        })
            .then(response => {
                if (response.ok) {
                    // Ukryj formularz i pokaż sekcję potwierdzenia
                    document.querySelector("#cartFormSection").style.display = "none";
                    document.querySelector("#cartConfirmationSection").style.display = "block";

                    // Aktualizacja badge koszyka (opcjonalnie)
                    updateCartBadge();
                } else {
                    alert("Wystąpił błąd podczas dodawania do koszyka.");
                }
            })
            .catch(error => {
                console.error("Błąd:", error);
                alert("Nie udało się dodać produktu do koszyka.");
            });
    });

    function updateCartBadge() {
        fetch('/ShoppingCart/GetCartItemCount')
            .then(response => response.json())
            .then(data => {
                const badge = document.querySelector(".fa-cart-shopping .badge");
                if (badge) {
                    badge.textContent = data.cartItemCount;
                    badge.style.display = data.cartItemCount > 0 ? "inline-block" : "none";
                }
            })
            .catch(error => console.error("Błąd podczas aktualizacji badge:", error));
    }
</script>
